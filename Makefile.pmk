# $Id$

CC=		@CC@
CPP=		@CPP@
AS=		@AS@

# On some platforms install is not BSD compatible
# so we use our own install program.
INSTALL=	./pmkinstall

SYSCONFDIR=	@SYSCONFDIR@

# base path for install
BASE=		@BASE@

# configuration file location
CONFDIR=	@CONFDIR@

BINDIR=		@BINDIR@
DATADIR=	@DATADIR@
MANDIR=		@MANDIR@

CFGFLAGS=	-DSYSCONFDIR=\"$(SYSCONFDIR)\" -DCONFDIR=\"$(CONFDIR)\"

# used for the dirname() function check in libgen
LGEN_FLAGS=	@LGEN_FLAGS@

# privilege separation user
PRIVSEP_USER=	@PRIVSEP_USER@


# Edit and use the following only if needed:

# Warning options
#WARN=		-Wall
#WARN=		-Werror
#WARN=		-ansi -pedantic
#WARN=		-Wall -Werror -ansi -pedantic

# Debug stuff
#DBGFLAGS=	-DPMK_DEBUG
#DBGFLAGS=	-DPMKSCAN_DEBUG
#DBGFLAGS=	-DPMKSETUP_DEBUG
#DBGFLAGS=	-DPMK_DEBUG -DPMKSCAN_DEBUG -DPMKSETUP_DEBUG
#DEBUG=		-g


CFLAGS=		@CFLAGS@ $(WARN) $(DBGFLAGS) $(CFGFLAGS) \
		$(ENV_CFLAGS) -DDATADIR=\"$(DATADIR)\" \
		-DPRIVSEP_USER=\"$(PRIVSEP_USER)\"

LDFLAGS=	@LDFLAGS@

MKTARGET=	@MKTARGET@

PREMAKE=	pmk
SETUP=		$(PREMAKE)setup
SCAN=		$(PREMAKE)scan
INST=           $(PREMAKE)install
PKGCFG=		$(PREMAKE)pc

BIN_FILES=	$(PREMAKE) $(SCAN) $(INST) $(PKGCFG) $(SETUP)
DATA_FILES=	pmkcfgtool.dat pmkcomp.dat pmkcpu.dat pmkscan.dat
MAN1_FILES=	$(PREMAKE).1 $(SCAN).1 $(INST).1 $(PKGCFG).1
MAN5_FILES=	$(PREMAKE)file.5 $(PREMAKE).conf.5
MAN8_FILES=	$(SETUP).8

SAMPLE=		$(PREMAKE)file.sample

SELFINST=	self-$(INST)

TEST_SAMPLE=	test_samples
TEST_INST=	test_pmkinstall
TEST_TARGET=	$(TEST_INST)/$(INST).test

P_OBJS=		autoconf.o cfgtool.o common.o compat.o detect.o \
		dynarray.o func.o functool.o hash.o hash_tools.o parse.o \
		pmk_obj.o pathtools.o pkgconfig.o $(PREMAKE).o

S_OBJS=		common.o compat.o dynarray.o hash.o parse.o pmk_obj.o \
		detect_cpu.o detect_cpu_asm.o $(SETUP).o

SC_OBJS=	common.o compat.o dynarray.o hash.o hash_tools.o parse.o \
		pmk_obj.o $(SCAN).o

I_OBJS=		common.o compat.o dynarray.o pathtools.o $(INST).o

PC_OBJS=	cfgtool.o common.o compat.o dynarray.o hash.o hash_tools.o \
		parse.o pkgconfig.o pmk_obj.o $(PKGCFG).o


.c.o:
	$(CC) $(CFLAGS) -o $@ -c $<

.s.o:
	$(CPP) $< | sed '/^#/d' > tmp_asm.s
	$(AS) -o $@ tmp_asm.s
	rm tmp_asm.s

# main target
all: $(PREMAKE) $(SETUP) $(SCAN) $(INST) $(PKGCFG)

$(PREMAKE): $(P_OBJS)
	$(CC) -o $(PREMAKE) $(LDFLAGS) $(P_OBJS) $(LGEN_FLAGS)

$(SETUP): $(S_OBJS)
	$(CC) -o $(SETUP) $(LDFLAGS) $(S_OBJS)

$(SCAN): $(SC_OBJS)
	$(CC) -o $(SCAN) $(LDFLAGS) $(SC_OBJS)

$(INST): $(I_OBJS)
	$(CC) -o $(INST) $(LDFLAGS) $(I_OBJS) $(LGEN_FLAGS)

$(PKGCFG): $(PC_OBJS)
	$(CC) -o $(PKGCFG) $(LDFLAGS) $(PC_OBJS)

install: all
	$(INSTALL) -d -m 755 $(DESTDIR)$(BINDIR)
	@for f in $(BIN_FILES); do \
		printf "$(INSTALL) -m 755 $$f $(DESTDIR)$(BINDIR)/$$f\n"; \
		$(INSTALL) -m 755 $$f $(DESTDIR)$(BINDIR)/$$f; \
	done

	$(INSTALL) -d -m 755 $(DESTDIR)$(DATADIR)
	@for f in $(DATA_FILES); do \
		printf "$(INSTALL) -m 644 data/$$f $(DESTDIR)$(DATADIR)/$$f\n"; \
		$(INSTALL) -m 644 data/$$f $(DESTDIR)$(DATADIR)/$$f; \
	done
	$(INSTALL) -m 644 samples/$(SAMPLE) \
		$(DESTDIR)$(DATADIR)/$(SAMPLE)

	$(INSTALL) -d -m 755 $(DESTDIR)$(MANDIR)/man1
	@for f in $(MAN1_FILES); do \
		printf "$(INSTALL) -m 644 man/$$f $(DESTDIR)$(MANDIR)/man1/$$f\n"; \
		$(INSTALL) -m 644 man/$$f $(DESTDIR)$(MANDIR)/man1/$$f; \
	done
	$(INSTALL) -d -m 755 $(DESTDIR)$(MANDIR)/man5
	@for f in $(MAN5_FILES); do \
		printf "$(INSTALL) -m 644 man/$$f $(DESTDIR)$(MANDIR)/man5/$$f\n"; \
		$(INSTALL) -m 644 man/$$f $(DESTDIR)$(MANDIR)/man5/$$f; \
	done
	$(INSTALL) -d -m 755 $(DESTDIR)$(MANDIR)/man8
	@for f in $(MAN8_FILES); do \
		printf "$(INSTALL) -m 644 man/$$f $(DESTDIR)$(MANDIR)/man8/$$f\n"; \
		$(INSTALL) -m 644 man/$$f $(DESTDIR)$(MANDIR)/man8/$$f; \
	done

deinstall:
	@for f in $(BIN_FILES); do \
		printf "rm -f $(DESTDIR)$(BINDIR)/$$f\n"; \
		rm -f $(DESTDIR)$(BINDIR)/$$f; \
	done

	@for f in $(DATA_FILES); do \
		printf "rm -f $(DESTDIR)$(DATADIR)/$$f\n"; \
		rm -f $(DESTDIR)$(DATADIR)/$$f; \
	done
	rm -f $(DESTDIR)$(DATADIR)/$(SAMPLE)

	@for f in $(MAN1_FILES); do \
		printf "rm -f $(DESTDIR)$(MANDIR)/man1/$$f\n"; \
		rm -f $(DESTDIR)$(MANDIR)/man1/$$f; \
	done
	@for f in $(MAN5_FILES); do \
		printf "rm -f $(DESTDIR)$(MANDIR)/man5/$$f\n"; \
		rm -f $(DESTDIR)$(MANDIR)/man5/$$f; \
	done
	@for f in $(MAN8_FILES); do \
		printf "rm -f $(DESTDIR)$(MANDIR)/man8/$$f\n"; \
		rm -f $(DESTDIR)$(MANDIR)/man8/$$f; \
	done

$(PREMAKE)-clean:
	rm -f $(P_OBJS) $(PREMAKE)

$(SETUP)-clean:
	rm -f $(S_OBJS) $(SETUP)

$(SCAN)-clean:
	rm -f $(SC_OBJS) $(SCAN)

$(INST)-clean:
	rm -f $(I_OBJS) $(INST)

$(PKGCFG)-clean:
	rm -f $(PC_OBJS) $(PKGCFG)

clean: $(PREMAKE)-clean $(SETUP)-clean $(SCAN)-clean $(INST)-clean \
		$(PKGCFG)-clean
	rm -f *.core

distclean: clean
	rm -f compat/compat.h Makefile tests/Makefile

