# $Id$

CC=		@CC@
CPP=		@CPP@
AS=		@AS@

# On some platforms install is not BSD compatible
# so we use our own install program.
INSTALL=	./pmkinstall

SYSCONFDIR=	@SYSCONFDIR@

# base path for install
BASE=		@BASE@

# configuration file location
CONFDIR=	@CONFDIR@

BINDIR=		@BINDIR@
SBINDIR=	@SBINDIR@
DATADIR=	@DATADIR@
MANDIR=		@MANDIR@

CFGFLAGS=	-DSYSCONFDIR=\"$(SYSCONFDIR)\" -DCONFDIR=\"$(CONFDIR)\"

# used for the dirname() function check in libgen
LGEN_FLAGS=	@LGEN_FLAGS@

# Flag to enable pmk in user mode (check INSTALL file for details).
USERMODE=	@USERMODE@

# Edit and use the following if needed :

# Warning options, uncomment as your need
#WARN=		-Wall
#WARN=		-Werror
#WARN=		-ansi -pedantic
#WARN=		-Wall -Werror -ansi -pedantic

# Debug stuff
#DBGFLAGS=	-DPMK_DEBUG
#DBGFLAGS=	-DPMKSCAN_DEBUG
#DBGFLAGS=	-DPMKSETUP_DEBUG
#DBGFLAGS=	-DPMK_DEBUG -DPMKSCAN_DEBUG -DPMKSETUP_DEBUG
#DEBUG=		-g


CFLAGS=		@CFLAGS@ $(WARN) $(DBGFLAGS) $(CFGFLAGS) \
		$(USERMODE) $(ENV_CFLAGS) \
		-DDATADIR=\"$(DATADIR)\"

LDFLAGS=	@LDFLAGS@

MKTARGET=	@MKTARGET@

PREMAKE=	pmk
SETUP=		$(PREMAKE)setup
SCAN=		$(PREMAKE)scan
INST=           $(PREMAKE)install
PKGCFG=		$(PREMAKE)pc

SAMPLE=		$(PREMAKE)file.sample

SELFINST=	self-$(INST)

TEST_SAMPLE=	test_samples
TEST_INST=	test_pmkinstall
TEST_TARGET=	$(TEST_INST)/$(INST).test

P_OBJS=		autoconf.o cfgtool.o common.o compat.o detect.o \
		dynarray.o func.o functool.o hash.o hash_tools.o parse.o \
		pmk_obj.o pathtools.o pkgconfig.o $(PREMAKE).o

S_OBJS=		common.o compat.o dynarray.o hash.o parse.o pmk_obj.o \
		detect_cpu.o detect_cpu_asm.o $(SETUP).o

SC_OBJS=	common.o compat.o dynarray.o hash.o hash_tools.o parse.o \
                pmk_obj.o $(SCAN).o

I_OBJS=		common.o compat.o dynarray.o pathtools.o $(INST).o

PC_OBJS=	cfgtool.o common.o compat.o dynarray.o hash.o parse.o \
		pkgconfig.o pmk_obj.o $(PKGCFG).o


.c.o:
	$(CC) $(CFLAGS) -o $@ -c $<

.s.o:
	$(CPP) $< | sed '/^#/d' > tmp_asm.s
	$(AS) -o $@ tmp_asm.s
	rm tmp_asm.s

# main target
all: $(PREMAKE) $(SETUP) $(SCAN) $(INST) $(PKGCFG)

showmode:
	@printf "Makefile is configured in '%s' mode.\n" $(MKTARGET)

sm: showmode

$(PREMAKE): $(P_OBJS)
	$(CC) -o $(PREMAKE) $(LDFLAGS) $(P_OBJS) $(LGEN_FLAGS)

$(SETUP): $(S_OBJS)
	$(CC) -o $(SETUP) $(LDFLAGS) $(S_OBJS)

$(SCAN): $(SC_OBJS)
	$(CC) -o $(SCAN) $(LDFLAGS) $(SC_OBJS)

$(INST): $(I_OBJS)
	$(CC) -o $(INST) $(LDFLAGS) $(I_OBJS) $(LGEN_FLAGS)

$(PKGCFG): $(PC_OBJS)
	$(CC) -o $(PKGCFG) $(LDFLAGS) $(PC_OBJS)

install: all
	$(INSTALL) -d -m 755 $(DESTDIR)$(BINDIR)
	$(INSTALL) -m 755 $(PREMAKE) $(DESTDIR)$(BINDIR)/$(PREMAKE)
	$(INSTALL) -m 755 $(SCAN) $(DESTDIR)$(BINDIR)/$(SCAN)
	$(INSTALL) -m 755 $(INST) $(DESTDIR)$(BINDIR)/$(INST)
	$(INSTALL) -m 755 $(PKGCFG) $(DESTDIR)$(BINDIR)/$(PKGCFG)
	$(INSTALL) -d -m 755 $(DESTDIR)$(SBINDIR)
	$(INSTALL) -m 755 $(SETUP) $(DESTDIR)$(SBINDIR)/$(SETUP)
	$(INSTALL) -d -m 755 $(DESTDIR)$(DATADIR)
	$(INSTALL) -m 644 samples/$(SAMPLE) \
		$(DESTDIR)$(DATADIR)/$(SAMPLE)
	$(INSTALL) -m 644 data/pmkcfgtool.dat \
		$(DESTDIR)$(DATADIR)/pmkcfgtool.dat
	$(INSTALL) -m 644 data/pmkcomp.dat \
		$(DESTDIR)$(DATADIR)/pmkcomp.dat
	$(INSTALL) -m 644 data/pmkcpu.dat \
		$(DESTDIR)$(DATADIR)/pmkcpu.dat
	$(INSTALL) -m 644 data/pmkscan.dat \
		$(DESTDIR)$(DATADIR)/pmkscan.dat
	$(INSTALL) -d -m 755 $(DESTDIR)$(MANDIR)/man1
	$(INSTALL) -m 444 man/$(PREMAKE).1 \
		$(DESTDIR)$(MANDIR)/man1/$(PREMAKE).1
	$(INSTALL) -m 444 man/$(SCAN).1 \
		$(DESTDIR)$(MANDIR)/man1/$(SCAN).1
	$(INSTALL) -m 444 man/$(PKGCFG).1 \
		$(DESTDIR)$(MANDIR)/man1/$(PKGCFG).1
	$(INSTALL) -m 444 man/$(INST).1 \
		$(DESTDIR)$(MANDIR)/man1/$(INST).1
	$(INSTALL) -d -m 755 $(DESTDIR)$(MANDIR)/man5
	$(INSTALL) -m 444 man/$(PREMAKE).conf.5 \
		$(DESTDIR)$(MANDIR)/man5/$(PREMAKE).conf.5
	$(INSTALL) -m 444 man/$(PREMAKE)file.5 \
		$(DESTDIR)$(MANDIR)/man5/$(PREMAKE)file.5
	$(INSTALL) -d -m 755 $(DESTDIR)$(MANDIR)/man8
	$(INSTALL) -m 444 man/$(SETUP).8 \
		$(DESTDIR)$(MANDIR)/man8/$(SETUP).8

global-deinstall:
	rm -rf $(DESTDIR)$(DATADIR)

user-deinstall:
#	nothing

deinstall: @MKTARGET@-deinstall
	rm -f $(DESTDIR)$(BINDIR)/$(PREMAKE)
	rm -f $(DESTDIR)$(BINDIR)/$(SCAN)
	rm -f $(DESTDIR)$(BINDIR)/$(INST)
	rm -f $(DESTDIR)$(BINDIR)/$(PKGCFG)
	rm -f $(DESTDIR)$(SBINDIR)/$(SETUP)
	rm -f $(DESTDIR)$(DATADIR)/$(SAMPLE)
	rm -f $(DESTDIR)$(DATADIR)/pmkscan.dat
	rm -f $(DESTDIR)$(DATADIR)/pmkcomp.dat
	rm -f $(DESTDIR)$(DATADIR)/pmkcfgtool.dat
	rm -f $(DESTDIR)$(MANDIR)/man1/$(PREMAKE).1
	rm -f $(DESTDIR)$(MANDIR)/man1/$(SCAN).1
	rm -f $(DESTDIR)$(MANDIR)/man1/$(INST).1
	rm -f $(DESTDIR)$(MANDIR)/man1/$(PKGCFG).1
	rm -f $(DESTDIR)$(MANDIR)/man8/$(SETUP).8
	rm -f $(DESTDIR)$(MANDIR)/man5/$(PREMAKE)file.5
	rm -f $(DESTDIR)$(MANDIR)/man5/$(PREMAKE).conf.5

$(PREMAKE)-clean:
	rm -f $(P_OBJS) $(PREMAKE)

$(SETUP)-clean:
	rm -f $(S_OBJS) $(SETUP)

$(SCAN)-clean:
	rm -f $(SC_OBJS) $(SCAN)

$(INST)-clean:
	rm -f $(I_OBJS) $(INST)

$(PKGCFG)-clean:
	rm -f $(PC_OBJS) $(PKGCFG)

clean: $(PREMAKE)-clean $(SETUP)-clean $(SCAN)-clean $(INST)-clean \
		$(PKGCFG)-clean
	rm -f *.core

dist-clean: clean
	rm -f compat/compat.h Makefile tests/Makefile

full-clean: dist-clean
fclean: full-clean

