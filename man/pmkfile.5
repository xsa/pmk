.\" $Id$

.Dd April 27, 2003
.Dt PMKFILE 5
.Os

.Sh NAME
.Nm pmkfile
.Nd pmk specification file

.Sh SYNOPSIS
.Nm

.Sh DESCRIPTION
.Nm
is a file containing specifications that help configuring a package build on a given platform.

.Sh DATA TYPES
.Nm
is using pseudo types like the following :
.Bl -tag -width Ds
.It Cm word
A word is a set of alphanumerical and underscores characters.
.Pp
Examples :
.Bd -literal -offset -indent
 a_word
 onlyalphanum
 but_underscores_are_nicer
.Ed

.It Cm quoted
This means quoted string which can contain a set of characters delimited by quotation marks.
.Pp
Examples :
.Bd -literal -offset -indent
 "simple quoted string"
 "string that contain \\"quotes\\" backslashed"
 "can also contain filenames like pmkfile.scan"
.Ed

.It Cm list
It is a set of 'word' and 'quoted' objects in brackets separated with a comma.
Blanks are currently not allowed beside commas, this means that you can find them only in a quoted string of the list.
.Pp
Examples :
.Bd -literal -offset -indent
 (one_word_list)
 ("another list with only one element")
 (mixed_list_of,words,"and","quoted strings")
.Ed
.El

.Sh SYNTAX
.Nm
can contain comments, blank lines and commands.
.Pp
A command has the following format (? character means optional field) :
.Bd -literal -offset -indent
 .<command><?(label)> {
 <body>
 }
.Ed
.Pp
The command and label names can be assimilated to the 'word' type (see data types).
.Pp
The body can contain comment(s) and definition line(s).
A commented line start with a '#' character like the following :
.Bd -literal -offset -indent
# this is a comment line
.Ed
.Pp
A definition line has the following format :
.Bd -literal -offset -indent
<?blank><key name><?blank>=<?blank><key value>
.Ed
.Pp
The key name type is 'word' (but could be 'quoted' for exceptions).
.Pp
The key value type can be 'word', 'quoted' or 'list'. The right type will depend on the key name (see further).
.Pp
Example :
.Bd -literal -offset -indent
 .CHECK_INCLUDE(header_sys_param) {
 # following options use different uses of blank characters
 # key value is word type
 REQUIRED = TRUE
 # key value is list type
 DEPEND=	("dep_one",dep_two,"dep_three")
 # key value is quoted type
 INCLUDE = "sys/param.h"
 }
.Ed

.Sh SPECIFIC COMMANDS
.Pp
The following commands have no label.
.Bl -tag -width Ds
.It Cm DEFINE
This command permits to define variables.
.Pp
Arguments :
.Pp
Example :
.Bd -literal -offset -indent
 .DEFINE {
 PACKAGE=my_prog
 VERSION="0.1"
 }
.Ed

.It Cm TARGET
This command defines the target templates where values will be substitued.
.Pp
Arguments :
.Bd -literal -offset -indent
LIST : type 'list', list of target's filenames.
.Ed
.Pp
Example :
.Bd -literal -offset -indent
 .TARGET {
 LIST=("Makefile.in","common.pmk")
 }
.Ed

.It Cm AC_COMPAT
This command enable autoconf compatibility.
.Pp
Arguments :
.Bd -literal -offset -indent
FILENAME : type 'quoted', autoconf config filename.
.Ed
.Pp
Example :
.Bd -literal -offset -indent
 .AC_COMPAT {
 FILENAME="config.h"
 }
.Ed

.It Cm SWITCHES
This command is setting dependency switches (see further DEPEND definition).
.Pp
Arguments :
.Pp
Example :
.Bd -literal -offset -indent
 .SWITCHES {
 use_curses=TRUE
 use_gtk=FALSE
 }
.Ed
.El

.Sh STANDARD COMMANDS
.Pp
All these commands need a label.
.Pp
They all can have the following optional arguments :
.Bl -tag -width Ds
.It Cm REQUIRED
Specify if this test is required to achieve the configuration. Recommended type is 'word'.
If not specified it is TRUE by default.
.It Cm DEPEND
Specify check dependencies. Type is 'list'. A dependency is a label or a switch name.
If at least one of the dependencies is false then the check will be disabled.
.El
.Pp
Some of these commands can also have the following arguments :
.Bl -tag -width Ds
.It Cm LANG
Specify the language used in the following list :
.Bd -literal -offset -indent
C
C++
.Ed
.Pp Recommended type is 'quoted'. By default \\"C\\" is the used language.
.El
.Pp
Here the list of commands :
.Bl -tag -width Ds
.It Cm CHECK_BINARY
Check if a binary is in the path.
.Pp
Arguments :
.Bd -literal -offset -indent
FILENAME : name of the binary. Recommended type is 'quoted'.
VARNAME : variable name to store the path. Recommended type is 'quoted'.
.Ed
.It Cm CHECK_INCLUDE
Check language header and optionally a function.
.Pp
Arguments:
.Bd -literal -offset -indent
REQUIRED, DEPEND, LANG.
INCLUDE : name of the header. Type should be 'quoted'.
FUNCTION : function to check, optional. Type can be word or quoted.
.Ed
.It Cm CHECK_LIB
Check a library and optionally a function.
.Pp
Arguments:
.Bd -literal -offset -indent
REQUIRED, DEPEND, LANG.
LIBNAME : library name to check. Recommended type is 'quoted'.
FUNCTION : function to check, optional. Type can be word or quoted.
.Ed
.It Cm CHECK_CONFIG
Check using a *-config tool.
.Pp
Arguments:
.Bd -literal -offset -indent
REQUIRED, DEPEND.
CFGTOOL : config tool name. Type should be 'quoted'.
VERSION : minimal version needed, optional. Type should be 'quoted'.
CFLAGS : variable name to store CFLAGS values, optional. Type can be 'word' or 'quoted'.
LIBS : variable name to store LIBS values, optional. Type can be 'word' or 'quoted'.
.Ed
.It Cm CHECK_PKG_CONFIG
Check a package using pkg-config.
.Pp
Arguments:
.Bd -literal -offset -indent
REQUIRED, DEPEND.
PACKAGE : package name. Type should be 'quoted'.
VERSION : minimal version needed, optional. Type should be 'quoted'.
CFLAGS : variable name to store CFLAGS values, optional. Type can be 'word' or 'quoted'.
LIBS : variable name to store LIBS values, optional. Type can be 'word' or 'quoted'.
.Ed
.It Cm CHECK_TYPE
Check if the given type exists.
.Pp
Arguments:
.Bd -literal -offset -indent
REQUIRED, DEPEND, LANG.
TYPE : type name. Type can be 'word' or 'quoted'.
.Ed
.El

.Sh SEE ALSO
.Xr pmk 1

.Sh AUTHOR
.An Damien Couderc

.Sh HISTORY
The idea to replace configure script was existing since a long time. 
But the projet was initiated in the begining of March 2003.
