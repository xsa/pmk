.\" $Id$

.Dd April 27, 2003
.Dt PMKFILE 5
.Os

.Sh NAME
.Nm pmkfile
.Nd pmk specification file

.Sh DESCRIPTION
.Nm
is a file containing specifications that help configuring a package build
on a given platform.

.Sh DATA TYPES
.Nm
uses pseudo types like the following:
.Bl -tag -width "identifier"
.It Cm bool
The classical boolean type with TRUE and FALSE values.
.Pp
For example:
.Bd -literal -offset indent
TRUE
FALSE
.Ed
.It Cm identifier
An identifier is a string of alphanumerical and underscores characters.
.Pp
For example:
.Bd -literal -offset indent
REQUIRED
a_label
underscores_are_nice
.Ed
.It Cm quoted
This means quoted string which can contain a set of characters delimited
by quotation marks.
.Pp
For examples:
.Bd -literal -offset indent
"simple quoted string"
"string that contain \\"quotes\\" backslashed"
"can also contain filenames like pmkfile.scan"
.Ed
.It Cm list
It is one or more of the previous types between brackets.
Multiple objects are separated with a comma.
Blanks are currently not allowed beside commas, this means that you can
find them only in a quoted string of the list.
.Pp
For example:
.Bd -literal -offset indent
("only_one_string")
("added a boolean",TRUE)
(mixed_list_of,"words","and",TRUE,"quoted strings")
.Ed
.El

.Sh SYNTAX
.Nm
can contain comments, blank lines and commands.
.Pp
A command has the following format (? character means optional field):
.Bd -literal -offset indent
<command><?(label)> {
	<body>
}
.Ed
.Pp
The command and label names can be assimilated to the 'word' type.
See
.Sx DATA TYPES
above.
.Pp
The body can contain comment(s) and definition line(s).
A commented line start with a '#' character like the following:
.Bd -literal -offset indent
# this is a comment line
.Ed
.Pp
A definition line has the following format:
.Bd -literal -offset indent
<?blank><key name><?blank>=<?blank><key value>
.Ed
.Pp
The key name is of identifier type.
.Pp
The key value type can be 'bool', 'quoted' or 'list'.
The right type will depend on the key name (see further).
.Pp
For example:
.Bd -literal -offset indent
CHECK_INCLUDE(header_sys_param) {
	# following options use different uses of blank characters
	# key value is word type
	REQUIRED = TRUE
	# key value is list type
	DEPEND=	("dep_one",dep_two,"dep_three")
	# key value is quoted type
	INCLUDE = "sys/param.h"
}
.Ed

.Sh SPECIFIC COMMANDS
.Pp
The following commands have no label.
.Bl -tag -width Ds
.It Cm SETTINGS
This command sets pmk parameters.
.Pp
Arguments:
.Bl -tag -width AC_COMPAT -offset indent
.It Dv AC_COMPAT
type is 'quoted', enable autoconf compatibility (empty string or filename).
.It Dv LANG
type is 'quoted', global default language.
.It Dv TARGET
type is 'list', list of target's filenames.
.It Dv DETECT
type is 'list', list of compilers to detect (CC and/or CXX).
.El
.Pp
For example:
.Bd -literal -offset indent
SETTINGS {
	AC_COMPAT="config.h"
	LANG="C"
	TARGET=("src/file.c","src/file.h")
	DETECT=("CC")
}
.Ed

.It Cm DEFINE
This command permits to define variables.
.Pp
Arguments:
.Bd -literal -offset
Those are the variables to be defined (quote data type only).
.Ed
.Pp
For example:
.Bd -literal -offset indent
DEFINE {
	PACKAGE="my_prog"
	VERSION="0.1"
}
.Ed

.It Cm SWITCHES
This command is setting dependency switches (see further DEPEND definition).
.Pp
Arguments:
.Pp
For example:
.Bd -literal -offset indent
SWITCHES {
	use_curses=TRUE
	use_gtk=FALSE
}
.Ed
.El

.Sh STANDARD COMMANDS
.Pp
All these commands need a label.
.Pp
They can all have the following optional arguments:
.Bl -tag -width REQUIRED -offset indent
.It Cm REQUIRED
Specify if this test is required to achieve the configuration.
Type is 'bool'.
If not specified, it is TRUE by default.
.It Cm DEPEND
Specify check dependencies.
Type is 'list'.
A dependency is a label or a switch name.
The value of each dependencie can be negated by adding a leading '!' sign.
If at least one of the dependencies is false then the check will be disabled.
.Pp
For example:
.Bd -literal -offset indent
DEPEND = ("header_gtk","!header_qt")
.Ed
.El
.Pp
Some of these commands can also have the following arguments:
.Bl -tag -width Ds
.It Cm LANG
Specify the language used in the following list:
.Bl -tag -width xxx
.It Dv C , C++
.El
.Pp
Type is 'quoted', by default \\"C\\" is the used language.
.El
.Pp
Here the list of commands:
.Bl -tag -width Ds
.It Cm CHECK_BINARY
Check if a binary is in the path.
.Pp
Arguments:
.Bl -tag -width REQUIRED -offset indent
.It Dv REQUIRED
.It Dv DEPEND
.It Dv NAME
type is 'quoted', name of the binary.
.It Dv VARIABLE
type is 'quoted', variable name to store the path.
.El
.It Cm CHECK_HEADER
Check language header and optionally a function.
.Pp
Arguments:
.Bl -tag -width REQUIRED -offset indent
.It Dv REQUIRED
.It Dv DEPEND
.It Dv LANG
.It Dv NAME
type is 'quoted', name of the header.
.It Dv MACRO
type is 'list', list of one or more compiler macros to check, optional.
.It Dv FUNCTION
type is 'quoted' or 'list', name or list of functions to check, optional.
.It Dv CFLAGS
type is 'quoted', variable name to store CFLAGS values, optional.
.El
.It Cm CHECK_LIB
Check a library and optionally a function.
.Pp
Arguments:
.Bl -tag -width REQUIRED -offset indent
.It Dv REQUIRED
.It Dv DEPEND
.It Dv LANG
.It Dv NAME
type is 'quoted', name of the library to check.
.It Dv FUNCTION
type is 'quoted' or 'list', name or list of functions to check, optional.
.It Dv LIBS
type is 'quoted', variable name to store LIBS values, optional.
.El
.It Cm CHECK_CONFIG
Check using a *-config tool.
.Pp
Arguments:
.Bl -tag -width REQUIRED -offset indent
.It Dv REQUIRED
.It Dv DEPEND
.It Dv NAME
type is 'quoted', config tool name.
.It Dv VERSION
type is 'quoted', minimal version needed, optional.
.It Dv CFLAGS
type is 'quoted', variable name to store CFLAGS values, optional.
.It Dv LIBS
type is 'quoted', variable name to store LIBS values, optional.
.It Dv VARIABLE
type is 'quoted', variable name to store the path of the config tool, optional.
.El
.It Cm CHECK_PKG_CONFIG
Check a package using pkg-config.
.Pp
Arguments:
.Bl -tag -width REQUIRED -offset indent
.It Dv REQUIRED
.It Dv DEPEND
.It Dv NAME
type is 'quoted', package name.
.It Dv VERSION
type is 'quoted', minimal version needed, optional.
.It Dv CFLAGS
type is 'quoted', variable name to store CFLAGS values, optional.
.It Dv LIBS
type is 'quoted', variable name to store LIBS values, optional.
.El
.It Cm CHECK_TYPE
Check if the given type exists.
.Pp
Arguments:
.Bl -tag -width REQUIRED -offset indent
.It Dv REQUIRED
.It Dv DEPEND
.It Dv LANG
.It Dv NAME
type is 'quoted', name of the type to check.
.It Dv HEADER
type is quoted, name of the header where to find the given type.
.It Dv MEMBER
type is quoted, name of a member of the structure given in NAME to be checked.
.El
.It Cm CHECK_VARIABLE
Check if the given variable does exist and optionally its value.
.Pp
Arguments:
.Bl -tag -width REQUIRED -offset indent
.It Dv REQUIRED
.It Dv DEPEND
.It Dv NAME
type is 'quoted', name of the variable to check.
.It Dv VALUE
type is 'quoted', value to check with the variable, optional.
.El
.El

.Sh CONDITIONAL COMMANDS
.Bl -tag -width Ds
.It Cm IF(expression)
It contains other commands that will be executed only if the given
expression is true.
.Pp
Arguments:
.Pp
For example:
.Bd -literal -offset indent
IF(header_gtk) {
	DEFINE {
		HAVE_GTK = "1"
	}
}
.Ed
.It Cm ELSE(expression)
It contains other commands that will be executed only if the given
expression is false.
.Pp
Arguments:
.Pp
For example:
.Bd -literal -offset indent
ELSE(header_glib) {
	DEFINE {
		HAVE_GLIB = "0"
	}
}
.Ed
.El

.Sh SHARED LIBRARY SUPPORT
.Bl -tag -width Ds
.It Cm BUILD_SHLIB_NAME
This command helps you to build the name of a shared library.
.Pp
Arguments:
.Bl -tag -width VERSION_FULL -offset indent
.It Dv NAME
type is 'quoted', name of the library (without leading 'lib').
.It Dv MAJOR
type is 'quoted', major number for the version.
.It Dv MINOR
type is 'quoted', minor number for the version.
.It Dv VERSION_NONE
type is 'quoted', variable name to store library name without version, optional.
.It Dv VERSION_MAJ
type is 'quoted', variable name to store library name with major version,
optional.
.It Dv VERSION_FULL
type is 'quoted', variable name to store library name with full version,
optional.
.El
.Pp
For example,
.Bd -literal -offset indent
BUILD_SHLIB_NAME {
	NAME = "test"
	MAJOR = "0"
	MINOR = "2"
	VERSION_NONE = "LIBNAME"
	VERSION_FULL = "LIBNAMEVERS"
}
.Ed
.El

.Sh SEE ALSO
.Xr pmk 1 ,
.Xr pmkscan 1
